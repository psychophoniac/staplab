#! /usr/bin/env stap
# this script does not track exec-calls on purpose, since it invokes a subprocess in a different manner than real forking

global trackChildren = 1
global targets

function addTarget(new_tid:long){
	if( trackChildren &&  new_tid > 0)
		targets[new_tid] = new_tid
}

probe begin {
	addTarget(target())
}

probe end {
	delete targets
}

function isTarget() {
	foreach( t in targets)
		if(pid() == t)
			return 1
	return 0
}

probe kprocess.create {
	if( isTarget() ) {
		//printf("create %d\n", new_pid)
		addTarget(new_pid)
	}
}

probe nd_syscall.fork.return {
	if( isTarget() ){
		//printf("fork %s\n", retstr)
		addTarget(strtol(retstr,10))
	}
}
